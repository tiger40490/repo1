--update blog (oth)
leverage concept of my own, inspired by the book
very similar to ROTI but more long-term
c# study? high leverage thanks to the initial gradient
c# offered some xref xx
yoga? questionable leverage .. not much visible progress
i feel wellness effort always high leverage to varying degrees

--new blog (not ready for publishing): criticalMass against churn 
See also post on impact of c++jobs

[tags t_gz_j^cpp, domainBet]

Critical mass (eg: in core java self-study) is one of the most effective strategies against technology churn. Once I accumulated the critical mass, I don't need a full time job to sustain it.

Q: how strongly is it related to accumulation?
A: not much. you need to accumulate the critical mass. With java I did it through enough interviews and reading. 

Q: why some domains offer no critical mass?
A: some (jxee) have limited depth
A: some (py) have No pattern identified from interview questions

Q: how strongly is it related to leverage?
A: not much. Critical mass enhances leverage

..other examples of criticl mass against churn
SQL? yes though SQL is diminishing
c++? yes took much longer to reach criticl mass
socket? not yet

--overloaded .. which one to lg?
diet without zsms? challenging .. spend more on fancy, convenient foods
lgpp crocs shopping 
indeed push to next week like Thu evening

--0 byte left .. very dangerous
how do I manage this risk?
Always git commit before closing file
make backup copies

--yoga
how to be less hard pushing?
how to reward myself more?

--new blog: python metaprogramming features
feature: module import
feature: runtime code generation and introspection

These are two of the most powerful py features. I wrote in another blog that py reflection is richer than c# and much richer than java

feature: decorator layering and with param
feature: metaclasses. IBM has an article

What's in common among these features? We manipulate modules, classes and attributes as if they are ordinary data. In other words, we manipulate the program itself. That's hallmark of metaprogramming IMHO. We can check other people's idea of "metaproamming" but I don't have to follow theirs.

--where to put the reminder below? Put in on google calendar once a day
"alt-shift -- changes input language as the windows standard"


--since 2007, very few examples of "effort->ROTI" including financial ROTI
(vague, not worth publishing)
* c++/C#/java IV pass rate
* pure algo IV pass rate
* online timed coding IV pass rate
* passive income growing including Energy12
* diet

--d-resort review (low value ... avoid Oth)
:) as planned, did some stretching and coding drill
:) as planned, boy did lots of math 
:) as planned, wild wild wet + buffet but overeating to be badly bloated

i didn't celebrate/reward myself enough esp. for the stretching and coding drill

--healthy diet tips given by SG HPB #orange
recommended -- sugar substitutes; sugar-free drinks; Chinese tea
orange is safe even though not leanest. Orange is not as low-cal as some veg but Singapore HPB (and many experts would agree) picked orange as the safest food. 

--new blog
a food with 0g fat or 0% DV of fat still has fat if calories from fat is nonzero