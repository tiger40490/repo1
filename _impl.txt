====Q [c graph] find cycle in binary tree? should read some hints after implementing my own design, based on the commonAncestor.cpp
See blog https://bintanvictor.wordpress.com/wp-admin/post.php?post=18950&action=edit

====Q[Lv] : Leetcode problem 17... Given a string containing digits from 2-9 inclusive, return all possible letter combinations (not permutations) that the number could represent.

2: abc
3: def
4: ghi
5: jkl
6: mno
7: pqrs
8: tuv
9: wxyz

Example:

Input: "23"
Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"]. 

--we need good variable names. The utility function would be
set<vector<char>> gen(vector<char> const & lob /*lettersOnOneButton*/ , int repeat)
type alias LOB for vector<char> or possibly a string
To minimize confusion, every digit is immediately mapped to a name string like '2' -> "er" and I hope not to use the digit any more.
222223444 would become {str_button -> bundle {set<vector<char>>, repeat, LOB}} ..{"er"->5 reps ...}

struct Bundle{
  set<vector<char>> club
  size_t repeat;
  LOB lob;
};

Miletone: the map is populated with the clubs. Now generate combos ... better use "append" approach.

=====Q[L] 60%: Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero. Doable in O(NN)
%%A: separate into (M) non-negatives and (N) negatives. get pairs among negatives (N^2).... and look up the sum in a pre-populated hash table of M items.
Total O(NN + MM), smaller than O( [N+M]^2 )
test in leetcode?

====Q [c e v] insertion sort for array
