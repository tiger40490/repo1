--update blog on 3 big changes in SG dev job market
"conceding" market share.... Reson? .. Overall good news for me since my java arm is still stronger than c++ arm
5) no longer blue-collar -- programmer used to be blue-collar support staff for the revenue staff. Some of the companies listed above treat programmers as first-class citizens.
--update blog on touch screen
MSWE: finger zoom will cycle through the views: Details -> list -> small icons -> .. -> details
--new blog
2008 (GFC) peak OPRA msg rate
Wikipedia "low latency" ... 1 million updates per second. My NYSE parser can handle 370,000 messges per second per thread
--update blog:
keeping 2 passports together is not ideal. The old passport gets in the way when I frequently take out current passport. 
Perhaps keep old passport in pouch
--new blog: keep interview`:y rare]%%peers
Many of my peers acknowledge the importance of job interivews, but they are able to move up so they don't need to interview again and again.

Their model doesn't work for consultants.

Their model doesn't woork for non-leaders.

Their model is risky when they need to move out.

--new blog: criticalMass against churn 
See also post on impact of c++jobs

[tags t_gz_j^cpp, t_domainBet]

Critical mass (eg: in core java self-study) is one of the most effective strategies against technology churn. Once I accumulated the critical mass, I don't need a full time job to sustain it.

Q: how strongly is it related to accumulation?
A: not much AFTER you accumulate the critical mass. With java I did it through enough interviews and reading. 

Q: why some domains offer no critical mass?
A: some (jxee) have limited depth
A: some (TMP, py) have No pattern identified from interview questions

Q: how strongly is it related to leverage?
A: not much though Critical mass enhances leverage

..other examples of criticl mass against churn:
SQL? yes though SQL is diminishing
classic data structures? Yes
c++? yes took much longer to reach criticl mass
STL? yes
socket? not yet

