====Q (update blog) serialize a BST
Can we make do without id and design the serialization sequence to save/reconstruct the tree structure?
I can output layer by layer. 
If 2nd layer has no missing node, then 3rd layer consists of exactly 4 nodes, using a sentinel value for any NUL. 
If 2nd node is NUL like [A/NUL/C/D], then the next layer would have "2 child nodes for A, 2 child nodes for C, 2 child nodes for D"
The 2 child nodes for A could be NUL/NUL

The id/edgeList based solution is general purpose and efficient. The techniques above are 雕虫小技. Venkat of OC said something similar about regex state machine. 

In the same vein, disjoint set is a general solution though many problems have simplified union-find solutions.

What if all integer values are valid values? 
I would add a one-bit flag to the serialized payload.

--park bike 
--collect some blog print outs
--bring some snacks to JFK
--send luggage to jfk thu evening including books for my carry-on

--sleep where
#1: office after 6? budget 1.5h commute
Chinat? heavy luggage:( ... additional commute
leave office at 4pm and sleep in jfkinn at 5.30 (more likely 6)?

--priority:
health
risk of losing things
LG2: productivity on flight
** Don't be over-reliant on laptop. It's not so reliable! bring 3-4 books
LG2: half day leave this Fri is acceptable
LG2: if books too heavy, just get a taxi

--new conditions this time
:( heavy luggage ... eating into my sleep and also increasing distraction and increasing risk of mistake
:( hotel expensive
:) no work pressure actually
:) late flight
:) excellent health
:) motivation
:) warmer