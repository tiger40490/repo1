--new blogpost: #1 gain{SG3jobs
All three jobs were java-lite and have some quantDev exposure.

Through these jobs, I gained the crucial clrity about the reality of quantDev direction, and stopped the brave but costly tsn attempts to secure a foothold. Footfhold is too tough and futile.
Instead, I successfully established c#/py/c++ trec.  The c++ accu was very difficult and precious.

Without these progresses, I would be lacking the confidence in py/c#/c++ to get multiple job offers. I would still be stuck in the quantDev direction

--new blogpost: if I had stayed within java
I think every tsn experience and proposal has some "buts". Does it mean we should stop trying? No. If I had stayed within java/sql/perl then I would have been worse off.... fewer job opportunities,  less broadended techncial base
more worry about job security
more wrroy about churn
more worry about outsourcing
no differentition from regular java guys
sql and perl falling out of fashion

Was leverage good on my tsn attempts after GS? Yes

--update blog on dummy node
P 90 [[Pearls]] introduced a simple loop idiom. Idiom is applicable whenever we loop over a container and have a early-exit "break". Such a loop has exactly two [1] conditional tests per iteration and can run faster if we combine the two into one conditional test. This is a small halo idiom for latency tuning.

There are more interesting benefits. 
For example, consider the business logic afer reaching "normal" end of the container without a hitting the early exit. 
Rarely can we "forget" this business logic and simply exit the function and rely on the implicit return.
Instead, this normal-completion scenario requires proper handling and is a mental burdern. 
To remind myself, I often place a comment after the loop. (Python provides an Else clause for a for-loop.)

In this scenario, it's often useful to append a sentinel element at end of the container. 
The sentinel is guaranteed to hit the "break", so we can combine the two into one conditional test:) 
I usually replace "break" with exit, further reducing the control-flow complexity.
Before the exit we still need to handle normal-completion scenario by checking that we hit the sentinel. Interesting scenario. 
Now we can combine the logic of normal-completion vs early exit. In many case, they are (nearly) identical, so we can express the logic in very structured code.

[1] what if three tests (two breaks)? The mental burden is now higher. The sentinel could reduce it

--new blogpost
Compare me against a java guy having only one big long java project, who has more zbs and GTD power, including
* performance tuning in thread pool, DB interface, serialization
* hot-swap anre remote debugging
* JMX

--new blogpost swap usage when RAM adequate
Adapted from blog by Hayden James

Even when our avarage memory usage is smaller than RAM capacity, system still benefits from swap. 

Most servers are daemons. Any daemon can create memory pages rarely accessed till shutdown
Kernel often decides to relocate rarely sed memory pages to swap for performance reasons, mostly to free up RAM.
The reclaimed RAM space can remain vacant for some time, 
so you may think the relocation is unnecessary but ..
* the relocation is usually harmless -- 
the kswap pid uses very little cpu unless such relocation workload becomes frequent and bidirectional, a sign of insufficient RAM. 
* the relocation is preemptive. 
The vacant RAM is available to any process that can use it more productively. In general, faster cache ought to hold "hotter" data

--update google sheet [[predict job satisfaction]]
Many of the top factors are "perceptions" rather than "hardships"

perceptions -- seld-esteem@comp; strategic tsn; engaging. #best eg@perception -- peer comparison
hardships -- mkt depth; workload; family time; commute
--new blogpost github profile
Polish 2-4 projects and list them on a blogpost. I can send the list or the blogpost.

Tcost needs to be controlled according the value. There's learning value when I polish my code.

Optionally, restrict read access. I think restriction is not really worthwhile. Hiring teams may "explore" my github beyond my featured projects but they don't know who wrote them or why. I would guess these interviewers are too busy.

--new blogpost: hotel after JFK landing
Note MTA subway is likely to have cancellations at night and weekends
--update blog on World hotel:
sound proof is virtually non-existent. In the morning I could hear people chatting 20m away in the corridor. I also heard intimate couple chitchat a few rooms away.  
