--update ranking of stressors
low hit rate of cv is a real problem but a smaller pain compared to other pains

--tag "story4iv"
Paul Fox email
--vultr tig@g ldn 2011 (10-char)

====Q[L]: Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element. Rahul said there's an O(N) solution.

I think this is mostly a bigO problem.

std::nth_element is linear on average !

-- idea 6: priority Q (Fib-heap) of size k
if any item is higher than the min, then pop min O(logK) and insert in O(1)
-- idea 6: priority Q 
Linear time to build it
-- idea 5: 95th percentile problem from NYSE
-- idea 4: multiple scans
-- idea 3: segments

-- Sol2: O(N). use the O(N) algo in the blog on "given int array, find median ] O(N)". Then discard one of the two segments. Then repeat. 
Note: Each time the target element must exist in one of the 2 segments.

O(N) + O(N/2) + O(N/4) ... -> O(N)

-- Sol2a: Use qsort partition algo to anchor a (random) pivot element to create two segments. Our target must exist in one of the two, so discard the other by adjusting the le/ri boundaries.
This idea is same as the most voted solution in leetcode discussion.
O(N) on average -- we get O(N)+O(N/2) + O(N/4) + ... < O(2N)

Note average complexity is acceptable in hashtable!
