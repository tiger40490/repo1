--new: simple tips@spreadsheet 
In spreadsheets, prefer '4~6' rather than '4-6' as the latter is automatically cast as a date !

prefer ranking with a/b/c than 5/4/3 in excel -- opportunity to highlight with capital-letters

--new: why avoid locking on boxed Intergers
https://stackoverflow.com/questions/34049186/why-not-lock-on-a-value-based-class section on "UPDATE - 2019/05/18" has a great illustration

Auto-boxing of "33" usually produces distinct objects each time, but can produce the same object repeatedly. Compiler has the freedom to optimize, just as in c++.

--new: java value-based types
Optional.java is the only important example we know.

One of the main ideas about value types is that they have no notion of identity (or perhaps their identity is detectable only to JVM not Java applications). In such a world, how could we tell whether variables aa and bb "really" are the same or different?

Q: why avoid locking on value-based objects?
%%A: locking is based on identity
A: https://stackoverflow.com/questions/34049186/why-not-lock-on-a-value-based-class

c++ has a smaller community and collective brain power 

--new: intellij=cleaner than eclipse
intellij (even the community version) is much cleaner than eclipse

My choice of java ide is based on
1) other developers in the team, as I need their support

2) online community support -- as most questions are usually answered there
I think eclipse beats intellij 

3) longevity -- I hate to learn a java ide and lose the investment when it disappears. 
I think eclipse beats intellij, due to open-source

*)other factors include "clean" 

The most popular tools are often vastly inferior for me. Other examples:
* my g++ install in strawberryPerl is better than all the windows g++ installs esp. msvs
* my git-bash + strawberryPerl is a better IDE than all the fancy GUI tools
* wordpress beats blogger.com hands down
* wordpad is a far simpler rich text editor than msword or browsers or mark-down editors

--new: java's position in new domains
cloud: golang and java are the most popular languages
bigData: java is possibly #1
ML: java is 2nd or 3rd

--update: old timers are safe in some teams like MLP, but not in MS

--first tbl commit in feature branch: to match handler java code