==mobile plans
all post-paid offer free incoming, so I have to rule out pre-paid

--Starhub $25 no contract 
100 min free outgoing
$3 for 500 sms

====

--record 
Gp passed me usd 5k on 1 Sep 2019, converted at 1.3876

To send remittance to megaworld again use the 14-digit number 17400015739104
--new: jvm^c++ as infrastructure
c/c++ is part of the infrastructure of many new technologies and will last for decades whereas java may not.

:( This doesn't mean there will be enough c++ jobs

JVM is an infrastructure for a small number of new languages and new frameworks like spring, hadoop, 
--add to CV:
had one-on-one discussions with Stroustrup about c++

--tmpl tmpl param
See my github demo

First and possibly biggest challenge is -- understand the limitation of traditional solutions


--new? stay]shape4CIV+QQ till 50
I would say QQ remains my stronger arm. I don't need to care about HFT shops' opinion. 
QQ benefits from thick->thin (and xRef) ... one of the key competitive advantages I could develop through blogging and continuous refresh.

CIV also benefits from blogging and continuous practice ... my competitive advantages. Remember David Okao's question "what is your secret weapon?"

High-end CIV is only needed at top west-coast shops. I think most of the top performers are young but I could stand out among my age group.

--new: Proven GTD: worthless in candidate ranking #JackZ
I feel that Jack Zhang is competent with localSys GTD but weak on c++ and comp science.

Does he have working knowledge of c++? I assume so. Working knowledge is attainable in a couple of months for a clean language, and up to a year for c++

The required level of working knowledge and basic skill is very low for localSys GTD.

His c++ knowledge is probably barely enough to do the job. Remember I didn't know what things live on java heap vs stack.

Based on my guesstimate, he would fail any c++ interview and any algo interview. He can write simple SQL in an interview, but I am not sure if he can write complex joins.

The fact that Jacn and DeepakM are are proven on GTD is useless and lost in the conversation.

How about CSY? He can solve many algo problems without practice, but he is reluctant to practice. 

I think the self-sense of on-the-job competency is misleading. Many in their positions might feel GTD competency is more important than IV skills. They are so afraid of the benchmark that they don't want to study for it. 

When the topic of tech interview comes up, I think they wish to escape or cover their ears.

--update blogpost on design based@localSys nlg
nowadays I avoid design confrontation as I risk losing my reputation. I got my fingers burnt before, including Macq, GS .. when I cared about my designs.

I think Rahul, Zhurong .. are unlike me. He put his heart into it ... and cared about this designss.

--email to XR
After talking to you and a few friends, now I feel Wall St contract is the fallback career plan for me. The alternatives are:

* ibank VP jobs -- I know many people in these roles including our friend Youwei. Looks too stressful.
* SG jobs -- mostly as stressful as ibank  VP jobs. 
* web2.0 shops -- I assume the expectation will be too high esp. for older guys like me
* startups? No idea.

--new? ##%%conquests since GS
[tags t_othRisk]
Until I left GS, I didn't know how it feels to "conquer" a sizable, lucrative tech skill. Such a tech skill represents a specific job market with supply and demand

perl? not sizable not lucrative :( Until 2011, Perl was my only core competency :( How lucky am I now !
coreJava QQ (as defined on WallSt) .. was my first conquest. After this conquest I haven been trying to replicate my success story, while many peers stayed in one firm in order to move up.
SQL? Many interview topics not explored, but now SQL is no longer a sizable job market:(
MOM? Not sizable
sockets ... not so sizable, not yet conquered
bond math ... was a small conquest
c++ QQ .. was my 2nd conquest, as experienced in 2017 onwards
CIV .. was my 3rd conquest. Growing bigger, though I only rate myself B among west coast candidates.

--new: ##taking up large codebases
I have grown from a sysAdmin to a dev
I have grown from web and scripting pro into a java pro then c++ pro
Next, I hope to grow my competence with large codebase
With a large codebase, I tend to focus on the parts I don't understand, regardless that's 20% or 80% of the code I need to read

I can learn to live with that ambiguity. I guess Rahul was good at that. 
In a few cases, within 3M I was able to "take up" a sizable brown field codebase and become somewhat productive. 
As I told Kyle, I don't need bottom-up in-depth knowledge to be competent. 
In terms of count of successes taking up sizable brown-field codebase, I am a seasoned contractor, so I scored more points than an average old timer in a given system.
eg: Guardian -- don't belittle the challenge and complexity
eg: mvea c++? My changes were localized, but the ets ecosystem codebase was huge
eg: mtg comm (small green field), integrated into a huge brown field codebase
eg: StirtRisk personalization -- I made it work and manager was impressed
eg: StirtRisk bug fixes on GUI
eg: Macq build system -- many GTD challenges
-- the obvious success stories
eg: AICE -- huge stored proc + perl
eg: Quest app owner
eg: error memos
eg: RTS
eg: Moodles at NIE
