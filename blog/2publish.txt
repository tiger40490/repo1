--new: java clone() usage
java clone() is needed mostly in one context -- immutable composite class
This topic is relevant in IV.

If you design a composite class (ImmComp) to be immutable, where some field is of type CC, then you need to clone each CC object received or returned from ImmComp. Remember the 2010 Citi muni interview.

Aha -- if ImmComp can be refactored to hold primitve/string contents of CC rather than a CC field, then things are simpler. CC needs no clone() method.
Aha -- if CC is already an immutable class then things are simpler. We probably don't need clone a CC object.

Warning: CC could be the root of an object graph. When we clone CC and CC contains a field of type DD, then a mutable DD would be part of CC's object state, and also ImmComp's object state. Any change to DD would break immutability of ImmComp :(

-- new: stop/suspend/resume/destroy in java threading
Occassional IV question, but relatively low market value. Nevertheless I consider this essential knowledge for an self-respecting ...

These four methods are still part of the API, and stop/suspend/resume are implemented and available, whereas destroy() is never implemented. They are all unsafe mostly for two reasons

1) suspend() forces the thread to suspend without releasing locks if any. Susceptible to deadlock. The resume() method is used with suspend().
2) stop() forces the thread to die and release all locks. No deadlock risk AFAIK. If the thread is forced to release a lock, then there is a proboem. The lock was likely needed to protect some state (consider fund transfer). Force-Release of the lock would expose some invalidate state.

-- update: 
both these words are 20-char longer

compartmentalization
12345678901234567890
internationalization

-- update: typical bonus amount:
Tanko said AWS + 1M bonus. Very good if on a high base. I don't want to compare up.

For a base salary 5-10k then this is more commonplace, but still good.

--new: web2.0 for sure if I had!!entered finDev@@
Some (casual) observers may say that without the 2007 WalSt journey I would have gone to web2.0 shops. 
Well, majority of non-finDev guys in my age group have not gone there. 
Look at XA.Shen, wq.luo, Tanko
Look at all of my ex-colleagues. 
Those who go into some web2.0 shops in SG are not earning 200k. Also, they must manage teams, in which I'm uninterested/unsuitable.

Q: What's the likelihood that I get into SG finDev without the U.S. detour? 
A: Questionable, because of entry barrier not only in IV. I would need to try 10-30 interviews but SG market doesn't let me keep trying

Q: Perhaps my disposition translates to strength in the web2.0 space? 
A: Well, financial dnlg(math++), multi-threading, language-details, latency knowledge are my strong games that are low-impact on web2.0 interviews.

-- update blogpost https://btv-gz.dreamhosters.com/wp-admin/post.php?post=38769&action=edit
CSY described the reaction of his 3 India-born contractors when manager anounced in a meeting the termination of their project. Project funding would end very soon.
Mgr promised to try and find other teams, but it's unlikely to have all 3 contractors retained.
CSY felt so much luckier because as perm he would have a job in other projects in the same team.

Therefore, he felt he would consider contract only if salary is 50% higher. Underlying reason -- his age and job search challenges are real. Dev-till-70 is not so easy.

This type of observation/experience reinforces the job insecurity "smell" of the contract career.

-- new: tanko on manager's -ve appraisal
At our age, we have our own inherent worth, and it doens't depend on that one manager's assessment.

-- update https://1330152open.wordpress.com/wp-admin/post.php?post=272&action=edit&classic-editor
I told Tanko .. the perfect job/mgr is one who accepts me as a greying, low-energy, unambitious techie, who does get things done at a reasonable quality but slower pace.

Tanko said some older managers are tolerant. Many team members are probably similar in productivity. Those fast workers are not necessarily more productive considering quality (rework, support issues...)

Tanko said he is older/slower than colleagues but more attentative to details. Sounds similar to me.

--new: fast-finisher^slow-finisher
Many of my peers were very efficient. They can focus and get a lot done in a short while. I tend to feel inferior (which is the main problem addressed in this blogpost).

Problem: they tend to waste their time after they finish early.  In contrast, some slow-finishers get to enjoy the process longer and in depth. Think of fine food, love-making, binge-watching multiple movies.

Dining (and intercourse) is a good place for slow-finishers. You enjoy more.

Exam vs self-practice: in MCQ exams, fast-finisher is a huge advantage provided accuracy is not sacrificed. fast-n-accurate. In self-practice, some people learn best in slow motion.

Problem (for students + coding drill): they don’t refresh the learning so they tend to forget more. Since I learn slowly, I tend to have better retention.

Problem: they don’t investigate further so they don’t gain further insights that I gain.

Problem (for developers): Sometimes they don’t pay enough attention to details, or they don’t add enough documentation; or they don’t test thoroughly;

When taking exams, I never hand in early. There no benefit, except to impress/intimidate other exam takers.

Problem: They tend to get bored a bit more. That boredom may or may not turn into creativity (as BBC suggested). As a slow-finisher, I tend to enjoy the process a bit more.

.. Q: what do these guys do After their early finish?
A: ... waste their time

On a similar note, many of my college friends are able to function with 6H of daily sleep (making me feel weaker and inferior) but what do they do with the extra time? Entertainment, Loafing, eating and drinking,,, It's human nature to indulge, when given extra time and money.

-- new: Vishal discussion
I thought Vishal would be wise to move out of PMW to a more lucrative domain. 

I thought Vishal has the soft skills and political skills to move up. In the end he chose move-out rather than move-up.

I thought Vishal would be one of the key individuals to get well-compensated by GS (to keep him loyal). He said he was in a few years but overall paid below the market.

Vishal described some geopolitics which affected the compensation, promotion, workload...

I feel shaming was a big whiplash used in PWM. ( Now I feel Stirt tech used some shame, as I was unable to meet the VP benchmark.) Beware: Shame is usually a ping-pong -- If manager sends a signal but I refused to respond, then shaming is less effective.

peer benchmarking is shaming if too explicit....

For contractors, manager is less likely to use motivation techniques including shaming. Emotionally tiring... If she does, the contractor is more free [1] to quit, more so than H1b employees.

[1] In his home country, Vishal also has more freedom. )

Many GS techies simply quit after seeing the workload, the compensation, the expectation, the motivation/whiplash. As Vishal described, most of them has found happiness since they left.

mutual responsibility .. Both employer and employee have some responsibilities over the bad outcome, be it shame, burn-out or health issues. As in the "homeless" discussion, it's unfair to blame the system only, and never look inside the self.

-- update blogpost
I asked Vishal -- do you get used to the high stress of VP? 
Josh seemed to be very cool.

Vishal said that even though he became better at handling the work, it was still too much. The demands and expectations were probably increasing on him. Move up or move out. I think he was benchmarked with other VP's 

As to urgency, I now feel Josh is confident to cope with virtually all the incoming issues. Unconsciously he assigns a urgency level to each so he is never overwhelmed 
