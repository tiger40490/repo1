--update blogpost on quant career:
if at same pay, i would prefer eq than drv pricing domain, due to mkt depth and job pool
--update blogpost on meaningful endeavors for family well being
competitive strength in speed coding contest -- such contest are now more prevalent and the skills are definitely more valued 
competitive strength in dStruct/algo beyond the classics
competitive strength in core cpp QQ
competitive strength in core java QQ -- bigger job market
competitive strength in socket QQ
competitive strength in SQL QQ and perl GTD -- better than swing 
competitive strength in math in school -- huge and long-term impact
competence in localSys -- no long-term impacts, so Ashish's t-investment is unwise
improvement in yoga and fitness

In each case, you build up competitive strength over J years but may lose it in K years. Each strength has very different long-term impacts, not "zero" (transient) as we sometimes perceived them to be.

Valuable resources are scarce and is a competition. Therefore this competitive profile has long term impact on health, mental aging, stress level, job choices, commute, amount of annual leave.

Any higher ROTI?

You can say every woman's natural beauty has imperfections when you see that woman everyday. This is because our idea of perfect beauty is based on paintings and photos, not live humans. Similarly, every endeavor's ROTI has imperfections compared to our naive, idealized concepts.

If you look for imperfections you will always find some.... but such fixation on imperfections is cynical, demoralizing and unproductive research

Need to zoom into my strategic strengths + long term interests such as low-level, theoretical stuff, pure algo, dstruct, and avoid my weaknesses 

low level QQ -- my strength
low level investigation using tools + codebase -- my weakness
picking up new GTD challenges -- my relative weakness
picking up new IV topic -- my relative strength

--new blogpost: sg workload: with-family
Lower workload Can mean more time for kids + workout, but can also mean more time wasted .. burn/rot

The free time saved from lower workload is often spent on reflective blogging.

--new blogpost: plowback
I used to feel I ought to "plowback" for zbs and GTD, not only for IV. Now after working for 20 years, I now believe ANY tech knowledge, accu, deepening/stack-up ... has no leverage and basically worthless if not relevant to IV. 
* GTD skills? dominated by localSys. Tool knowledge can help but localSys is 10x more important.
** localSys xx is almost always cursory and not in-depth since unnecessary digging (pwm-comm bottom-up xx plan) is invariably unsustainable -- patchwork systems, destined for rewrite, illustrating few best practices
* BestPractice design? Almost never mattered in my career. After EMPWorld, I have never risen to decision-maker level.
* BestPractice implementation? mostly a matter of personal preference by the manager
* zbs? Consider the classic books like [[Pearls]]. If not relevant to IV then this zbs is only for self-satisfaction

This is one reason why my reinforcement loop completely broke in Singapore. My NY years were filled with self improvement driven by interviews.
