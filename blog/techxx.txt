
-- new or update..
set -x # very useful to tracing scripts, but it doesn't show the script1.sh when we have 

source ../a/b/script1.sh

-- new or update ..
P 198 [[essentialC++]] has a sharp pointer "... mistake is to confuse c++ exceptions with hardware exceptions, such as seg fault or bus error. For a c++ exception to be thrown, there is a throw expression somewhere in program code."

I believe many hardware exceptions (such as seg fault) are detected by low-level software code. 
Many programmers don't distinguish those agaisnt userland exception creation.

rare JIV topic, perhaps only in c++JIV, so I don't want to read too much. 
I believe java beats c++ in documenting system exception. 

~~ in ANSI C, I think errno.h standard header is a primitive solution. The header defines a bunch of  fairly standard (but not platform-indepedent) macro constants for common error conditions. 

You are free to explore those macros (i.e. error conditions). They should have comments.

errno.h also declares an global varible "extern int errno;" This variable is allocated once, and accessed by countless "producer/consumer" functions. A singleton object for many error conditions!

Segfault is actually a signal defined as SIGSEGV in ANSI signal.h. Same file also defines other low-level (hardware) exceptions like illegal instruction, interrupts,,,

How are signals and errno related? Don't know.

-- update which bpost on static
Function f99() in file2.cpp is by default accessible from any other file like file3.cpp.
If you want file3 to not see f99(), then you can use 'static' in file2. 
This f99() becomes private to file2.cpp.
I think this can be useful when combining many files from different sources.
I think I have examples to prove it.

Similarly, a file-scope static variable is private to its file, even if another file uses "extern" to link to it.

-- new: calloc(): slightly diff from malloc()
Feature: calloc() zero-initializes the memory before returning it.
Non-feature: calloc() returns the same void pointer type as malloc()
Non-feature: returned memory size is identical

calloc() is (not a must) often Preferred over malloc() when allocation arrays.

-- new: goto vs long jump in c++
diff: goto is intra-function. Long jump is across functions. Therefore, it's known as nonlocal jump.
We can google for legit use of long jump

-- new: tips@futures contract month codes
M/N sound alike .. June/July look alike.
F: FFFirst month
U: my UChicago program started in Sep.

The quarter month codes are more important: H:March, Z:December etc

-- fuxi or update bpost
Background: you check out from origin/br2, and you want to rename your local branch and git-push soon

It's better to git-checkout-b to create a new branch.

renaming would mess up the git-push
-- fuxi
print(f'{var1:33}’) # prints at least 33-chars  and won’t truncate

-- fuxi or update bpost on grep
The --exclude-dir probably works only with recursive grep.

-- new: perl regex tips
to evalute int($2) - int($1), you can use
s/(whatever)...(whatever)/$2-$1/e 

Must not use \2-\1

to match a run of the same letter /(\w)\1{2}/  # trio

-- new: linux command: count group-by 1stWordEachLine
uniq -c # is the basic command. To make use of it, we can run perl to trim each raw input line down to the relevant word and nothing else.

-- new: py package dependency mgmt
to reveal all precedents and dependencies of an high-level pip package 

pip show langchain

If you have some unknown number of dependencies removed, then you can fix it with this 3-word command:

pip install langchain

(langchain package has a requirements.txt.) The command will check requirementstxt, detect any dependency that's already satisfied and skip them.

-- update 
clean price is quoted price. Quoted price should not change every day due to acrued interest. That change is a noise that traders don't want to see.

dirty price is "the actual price" i.e used to compute actual transaction amount.

-- fuxi: why some type of problems are more popular on question banks
Most coding interviews last 30m only.

array problems are easy to explain/understand, easy (for an interviewer) to set up

Threading questions are much harder to set up and test.

-- fuxi
In python dict initilization, you may want to specify the keys in a consistent order. The order is preserved when you print myDict.keys()

-- fuxi: bbg automation/integration 
AWS S3/SQS
MQTT
snowflake
