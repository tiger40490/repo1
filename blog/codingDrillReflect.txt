--better performance than Indeed onsite
* coding rounds -- Eric gave positive feedback to confirm my success. No miscommunication as happened in the VersionedDict. 2nd Indeed interviewers failed me even though I "completed" it. Pregnant interviewer may follow suit.
* not as hard as the 2011 FB interview -- regex problem
* data structure is fundamental to all the problems today.
* SDI -- was still my weakness but I think I did slightly better this time
* Career round -- played to my advantage as I have multiple real war stories. I didn't prepare much. The stories just came out raw and hopefully authentic
* the mini coding rounds -- played to my advantage as I reacted fast, thanks to python, my leetcode practice ...

--Today I feel getting much closer to passing. Now I feel One interview is all it takes to enter a new world
* higher salary than HFT
* possibly more green field
* possibly more time to research, not as pressed as in ibanks

--
I still want to practice on the harder problems, as they do show up in some interviews.
====
some people spend too little time on the motivation analysis, but I tend to spend too much time.
Perhaps I should just do it
--update blogpost...
In terms of long-term orgro, QQ study feels slightly better than coding drill.
Therefore, I prefer to focus on insight into the structure/constraints of each problem, and hope for better retention.

Compared to QQ study, coding drill keeps me younger and more relevant to the new crop of programmers and jobs

--add to blogpost on satisfaction
After such heavy leetcode practice, do I feel satisfied? Deeply satisfied? How long will it last?

Am I more confident after solving many problems on my own? I would say yes

--email
In 1999, at the height of the dotcom bubble, a fellow programmer described to me the hiring standard at some dotcom shops like "If you can write some simple programs, then you are hired."

I feel the leetcode style interview is now similar. The hiring criteria is geared towards fresh graduates. Even for experienced hires, the emphasis appears mostly on language-agnostic algorithms and data structures. No advanced language knowledge required. No SQL, no OS knowledge, no network protocol, no system automation (scripting) required.

Command line utilities is another example -- a practical skill important in linux/unix work environments, frequently quizzed in Wall St interviews. Not all fresh graduates have this experience, and some experienced hires don't use them either, so this skill is not required in west coast interviews.

I feel this type of screening and this level of salary is a sign of bubble. 
