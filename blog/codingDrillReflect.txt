--
some people spend too little time on the motivation analysis, but I tend to spend too much time.
Perhaps I should just do it
--update blogpost...
In terms of long-term orgro, QQ study feels slightly better than coding drill.
Therefore, I prefer to focus on insight into the structure/constraints of each problem, and hope for better retention.

Compared to QQ study, coding drill keeps me younger and more relevant to the new crop of programmers and jobs

--add to blogpost on satisfaction
After such heavy leetcode practice, do I feel satisfied? Deeply satisfied? How long will it last?

Am I more confident after solving many problems on my own? I would say yes

--email
In 1999, at the height of the dotcom bubble, a fellow programmer described to me the hiring standard at some dotcom shops like "If you can write some simple programs, then you are hired."

I feel the leetcode style interview is now similar. The hiring criteria is geared towards fresh graduates. Even for experienced hires, the emphasis appears mostly on language-agnostic algorithms and data structures. No advanced language knowledge required. No SQL, no OS knowledge, no network protocol, no system automation (scripting) required.

Command line utilities is another example -- a practical skill important in linux/unix work environments, frequently quizzed in Wall St interviews. Not all fresh graduates have this experience, and some experienced hires don't use them either, so this skill is not required in west coast interviews.

I feel this type of screening and this level of salary is a sign of bubble. 
