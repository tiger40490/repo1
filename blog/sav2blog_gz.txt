--update blogpost on ## self-esteem
Looks like every venture out of my tech sweet spot java/SQL/scripting... presents esteem-hazards (like health hazards) but no possible upside in terms of self-esteem boost.

high-risk, low-return venture?

The health hazard is really nothing but one person's assessment. For my recent painful jobs, I continue to dismiss/ignore the positive effects on self-esteem --
* I conquered some of my biggest technology fears -- MSVS; c++ crash management; c++ large code navigation.. Other people may not agree, but my own experience proves that these challenges are harder than web or scripting developments. My fears were more deep-rooted.
* I built real mileage in c#. I even proved myself stronger than some c# veterans when I created a simple web server to dump log files for everyday troubleshooting.
* see more pointers in https://bintanvictor.wordpress.com/wp-admin/post.php?post=27139&action=edit

--update blog on 'expert'
If I were a 5Y VP (or ED) I would doubt if I'm just a local expert or a recognized, accredited expert as proven on benchmarks/interviews.

Look at Shubin/Steve, the Sprite expert in London, Richard of Quoine .. 
Their expertise and value-add may be marginalized in the context of the current mainstream technologies

--new blogpost: explicit^ambiguous performance feedback
If I'm below average in the team, but manager doesn't create a stigma out of it, then I am safe from the deadly hazard ... happy and contended. I can simply tell myself that other guys are very bright and have longer experience with the local system.

I really fear explicit feedback, but management best practice encourage explicit feedback. Josh is not doing that and am extremely grateful.

I told Greg about my situation and kind of sought more explicit feedback. I think that's not necessary. I really prefer more implicit or ambiguous feedback

I know a few old non-VP (or VP) guys in MS. 
I often imagine being one of them. 
If I'm just mediocre, I would worry (constantly) about layoff -- not the loss of livelihood but loss of pride. As contractor, I would go out after N years without an explicit reason. To me, the financial impact is tolerable, but the explicit negative assessment is a deadly blow.

--new blogpost: avoid hot domains that attract young competitors
I feel clearly less in-demand as I age. 
Perhaps I should shift towards domains that young guys avoid -- like c++/coreJava, back office, risk systems, exchanges and commercial banks (rather than buy-side), sockets, mkt data, 

telecom?

--no blogpost
Even though Indeed hiring team claims to be language agnostic and don't care about your app domain, their architecture questions are gear towards web2.0 shops

There's a thinly veiled leaning towards java. 
If you use another language for your whiteboard, then you had better be very fast and sharp to defend your solution when it differs from the optimal java solution.

In reality, the solution you get using another language CAN be different from the optimal java solution.

--no blogpost:
Quoine probably designed a tcp feed for internet clients, but in the industry, multicast feed is more industrial-strength, more advanced, more practical. Such expertise is more in-demand 

--no blogpost: delights: engaged,leverage,strategic.. 
[tags t_othRisk]
I feel my expectation was invariably too high in terms of strategic value, leverage and ROTI, therefore underwhelming. 
(engagement ... expectation was moderately too high) 
Against this backdrop, there are little delights, but stigma/respect (not salary!) was too huge as a factor and overshadowed those little delights. For a perspective, please look at the spreadsheet "predict next 3-5Y job satisfaction"

I chose a python job at Macq .. engaged for a few months, to my delight
I chose the c++ job at RTS .. engaged for 6 months, to my delight. 
* Reason: traction in interviews and also in GTD and zbs
* Reason: interviews
* Reason: socket QQ was in-demand
* Reason: QQ discussions with colleagues .. visible progress

Both job decisions produced good/superior leverage over 5Y.

I chose a c# job ... engaged for a year and then disengaged, shorter than expected. Leverage was good.

I chose a Quant dev job ... engaged for a year and never disengaged. Leverage was underwhelming.

I chose a c++ large scale eq OMS job ... engaged for a few months. Leverage is unknown

--no blogpost: c#^java/c++ journeys
[tags t_below7]
my c# xx journey was exciting for 6M before OC and in first year in OC. In contrast, my core-java/c++ (less for jxee) journeys have generated superior ROTI (elusive) because 
* the interview topics are stable 
* market waves steered me to stick to (not abandon) these career directions

leverage? c# is lower but not bad. See separate blogpost

For all languages, there is no hike, no strategic value so at that level all underwhelming
--no blogpost:
quant knowledge used to be a halo, now replaced by coding IV skills like
* DP, recursion
* data structures
* speed coding 

I now feel all of these + QQ knowledge are all white elephants not directly relevant to GTD
