--Until I left GS, I didn't know how it feels to "conquer" a sizable, lucrative job market

perl? not sizable not lucrative :( Until 2011, Perl was my only core competency :( How lucky am I now !
coreJava as defined on WallSt .. was my first conquest. After this conquest I haven been trying to conquer more, while many peers stayed in one firm in order to move up.
SQL? Many interview topics not explored, but now SQL is no longer a sizable job market:(
MOM? Not sizable
c++ .. was my 2nd conquest, as experienced in 2017 onwards
CIV .. was my 3rd conquest, though I only rate myself B among west coast candidates.

--update blogpost on design based@localSys nlg
nowadays I avoid design confrontation as I can lose my reputation. I got my fingers burnt before including with Kevin

--email to XR
After talking to you and a few friends, now I feel Wall St contract is the fallback career plan for me.

* ibank VP jobs -- I know many people in these roles including our friend Youwei. Looks too stressful.
* SG jobs -- mostly as stressful as ibank  VP jobs. 
* web2.0 shops -- I assume the expectation will be too high esp. for older guys like me
* startups? No idea.

--
As soon as we start to work towards better salary , we are on a slippery slope. 
We may feel we are on a reasonable ground, with a reasonable goal, but down the slope there is irrationality, despair, desperation, greed, self-hate, inferiority...
we tend to keep up with the Jones's. Many people compare with the wrong peer group ..
We tend to neglect many valuable things that at end of our lives we would recognize as more important than the rat race

One of the jolting, awakening (一盆凉水) questions is -- Granted other people earn a lot more, but i don't need that much money to live a comfortable life, so why do I feel inadequate so often?

I told many friends that I work hard to prepare for interviews but I am Very selective about where to join. 
I focus mostly on the salary level in the WallSt contract market, not the perm salaries. 
This kind of attitude is one small step towards a more rational, more pragmatic perception of the rat race

--new? stay]shape4CIV+QQ till 50
(replace the item in _gz.txt)

I would say QQ remains my stronger arm, even though the HFT shops may dismiss it. I don't need to care about them. 
QQ benefits from thick->thin (and xRef) ... one of the key competitive advantages I could develop through blogging and continuous refresh.

CIV also benefits from blogging and continuous practice ... my competitive advantages. Remember David Okao's question "what is your secret weapon?"

High-end CIV is only needed at top west-coast shops. I think most of the top performers are young but I could stand out among my age group.

--nothing new. integrate with t_focus@GTD and the 'timeMgmt' category in open blog
my time at home is limited:
* household chores -- leave to maid if possible
* time for family esp. boy
* non-tech blogging+emailing is a huge contender
* tech xx including QQ, zbs, coding
* GTD (wfh) -- capture the mood if possible

My hours in office are scarce :
* tech xx including QQ -- need to cut further. Might be tough and need optimization
* GTD -- camp out if in the mood
* localSys explore -- for long term productivity etc
* frequent breaks
--add to blogpost on GS-sg
In SG, more than half the time I was assessed as a dev lead (or architect) but I don't want to. 

U.S. contract market is better.

--no blog
I feel that Jack is competent with localSys GTD but weak on c++ and comp science.

Does he have working knowledge of c++? I assume so. Working knowledge is attainable in a couple of months for a clean language, and up to a year for c++

The level of working knowledge and basic skill is very low for localSys GTD.

His c++ knowledge is probably barely enough to do the job. Remember I didn't know what things live on java heap vs stack.

Based on my guesstimate, he would fail any c++ interview and any algo interview. He can write simple SQL in an interview, but I am not sure if he can write complex joins.

How about CSY? He can solve many algo problems without practice, but he is reluctant to practice. 

I think the self-sense of on-the-job competency is misleading. Many in their positions might feel GTD competency is more important than IV skills. They are so afraid of the benchmark that they don't want to study for it. 

When the thought of tech interview comes up, I think they wish to escape or cover their ears.

--new: jvm^c++ as infrastructure
c/c++ is part of the infrastructure of many new technologies and will last for decades whereas java may not.

JVM is an infrastructure for some new languages and new frameworks like spring, hadoop, 

This doesn't mean there will be enough c++ jobs
-- 
IV topics
QQ or algo or math ... just fads. Doesn't make sense to me

--QQ=fake;zbs learning=treacherous
Experts sizing up each other ... is mostly by some form of zbs knowledge (mostly QQ), not needed to GTD

I used to feel my QQ knowledge was not zbs but now I think many interviewers ask zbs questions. zbs is a vague concept. QQ has a well-established range of topics. 

Biggest danger with zbs -- when I spend my precious spare time on zbs not aimed at QQ, I inevitably regret. Without QQ, the learning lacks reinforcement, positive feedback loop and fades from memory.

Therefore, zbs learning must aim at xref and thick->thin.

? One guy with zbs (possibly poor QQ) may be very mediocre in a new team. It depends on the key skill needed in the team. Is it localSys, design ...? I think localSys insight is always required.

--brain: anti-aging job
Chris Ma felt any programming job is intense, never lethargic. I tend to consider some support type of work as coding. Chris felt a relatively easy programming job would be good for my brain. 

Now I feel this view echoes Jiang Ling's view

--Chris asked "Have you considered other professions"
I mentioned teaching; Chinese school for young kids; startup .. but I was not serious not passionate.

In hind sight I basically presented an image as a graying techie interested in coding, esp. low-level coding, and low-level, almost theoretical knowledge. 
--I told Chris my bias towards U.S. job market
* open-door policy towards graying techies
* lower stress, for multiple reasons
* plenty of jobs, at least in tristate area
* tech jobs are growing and we are in-demand, even at our age. I said we are both lucky. Chris said in the future there will be only IT jobs.
* my competitiveness among older techies
* decent contract rate

--me as perceived against other candidates at my level
architect or tech lead or dev lead?

--market depth
US tech salary very high, so even a mediocre tech job pays well above traditional jobs. Dev jobs pays even higher than regular tech jobs.

Gave me sense of security

--add to CV:
had one-on-one discussions with Stroustrup about c++

--new: taking up large codebase
In a few cases, within 3M I was able to "take up" a sizable brown field codebase and become somewhat productive. As I told Kyle, I don't need bottom-up in-depth knowledge to be competent. 

In terms of count of successes taking up sizable brown-field codebase, I am a seasoned contractor, so I scored more than an average old timer in a given system.
* eg: Guardian -- don't belittle the challenge and complexity
* eg: mvea c++
* eg: mtg comm, integrated into a huge codebase
* eg: StirtRisk personalization -- I made it work and manager was impressed
* eg: StirtRisk bug fixes on GUI
* -- the obvious success stories
* eg: AICE -- huge stored proc + perl
* eg: Quest app owner
* eg: error memos
* eg: RTS

--new
I have grown from a sysAdmin to a dev
I have grown from web and scripting pro into a c++ pro
Next, I hope to grow my competence with large codebase

With a large codebase, I tend to focus on the parts I don't understand, regardless that's 20% or 80% of the code I need to read

I can learn to live with that ambiguity.

--new blogpost?
sometimes I tell myself "if I commit myself I could do well in a job and move up and stay beyond 2Y." ... Largely romanticizing. It has not happened and unlikely to happen. Key reasons

* my immigration plan
* contract job? Not really a obstacle, as conversion to perm is always possible
* for perm jobs, after 12M I tend to receive neg reviews, partly due to benchmarking. No benchmarking for contractors
* My cash-flow is positive and I can afford to change to lower jobs, unlike some peers.
* Nowadays, annual job hopping is not so uncommon as programmers are a hot commodity. (Still, as I age, I avoid that and try to stay for 2Y+)

--Retire at Google?
CSDoctor thinks it's possible but I doubt it
However CSDoctor questions himself "To present myself as a team lead or architect, what do I have to offer them?"

--paradox: if I feel basically semi-retired on my rental income, why do I envy those with higher income?

I feel I'm able to feel OK with conserver lifestyle, but my family members would not feel so comfortable. See my blog on deprivation.

Pattern: 
Suddenly I happen to notice a few "peers" getting ahead in terms of salary ... and I get hit by the same inferiority complex as before.
Actually, people 10 years younger are not my peers
Actually, the manager types aren't my peers, as grandpa pointed out repeatedly.

Q: what do I treasure more? I don't really need the 20% extra income. 
A: easy life -- PIP, stigma .. are real risks in my career.
A: beautiful wife
A: SG citizenship
A: wellness
A: cash flow freedom over 20Y or till end of my life
A: robust career. Their careers may not be so robust if you look closely

--fuxi
sg job market remains as slow and thin as before. Still financial jobs constitute 90% of my job pool
JC has more suitable jobs than SG has including start-up.

Singapore non-finance companies simply can't afford because the main street dev salary is much lower than U.S.

The wall st salary level is largely influenced by west coast and also main street dev salary. No such influence in SG

--no blog
I told Rahul that I need to be independent to capture the engagement, but that's short term.

Over long term, what do I need to survive and thrive?
* sustained focus on localSys
* respect/appreciation
* not boxed into some unfavorable technology like high-churn 

--fuxi
Like Black developers .. As an older Singaporean developer I also have higher visibility.
IFF I apply myself (localSys) and establish a foundation at a new site as Piroz does, I think I could survive and possibly show my hidden strengths.

However, at Stirt I was unable to outshine other guys.

At Macq, I was unable to impress bosses.

--fuxi
the IV successes define me.
Without these successes, I am likely to feel a total failure and worthless. I will probably fall into this pit more than once a years -- self-knowledge.
