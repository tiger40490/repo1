--new blogpost:
I used to feel I ought to "plowback" for zbs and GTD, not only for IV, but after working for 20 years, I now believe ANY tech knowledge, accu, deepening/stack-up ... has no leverage and basically worthless if not relevant to IV. 
* GTD skills? dominated by localSys. Tool knowledge can help but localSys is 10x more imporant.
* BestPractice design? Almost never mattered in my career. After EMPWorld, I have never risen to decision-maker level.
* BestPractice implementation? mostly a matter of personal preference by the manager
* zbs? Consider the classic books like [[Pearls]]. If not relevant to IV then this zbs is only for self-satisfaction

This is a fundamental reason why I lost steam in Singapore. My NY years were filled with IV-driven self-improvement.

--new blogpost intangible gains { c#endeavor
category: tsn
tags engage
add link from "score big"
* self-image boost in absorbency and deep-dive
* precious engagement for 12M, sustained focus, absorbency
* i'm no long afraid of a decline of java in the face of microsoft challenge. Right now, java is challenged mostly by python and javascript
* removed most of my fear of joining a windows dev team like Ashish's 
* experience (GTD and ... IV) grew from 0 to 5/10 in windows __serverside__ dev and scripting
* growing confidence with msvs
* insight into the evolution and cross pollonization among the big3 languages
* leverage? not bad
* market depth? good except the high-end tends to be WPF

--new blogpost: delights: strategic, engaged
[tags t_othRisk]
I feel my expectation was invariably too high in terms of strategic value, therefore underwhelming. (engagement ... expectation was moderately too high) Against this backgrop, there are little delights, but stigma/respect (not salary!) was too huge as a factor and overshadowed those little delights. For a perspective, please look at the spreadsheet "predict next 3-5Y job satisfaction"

I chose a python job at Macq .. engaged for a few months and never disengaged, to my delight
I chose the c++ job at RTS .. engaged for 6 months, and never disengaged, to my delight. 
* Reason: traction in interviews and also in GTD and zbs
* Reason: interviews
* Reason: socket QQ was in-demand
* Reason: QQ discussions with colleagues .. visible progress

Both job decisions produced good/superior leverage over 5Y.

I chose a c# job ... engaged for a year and then disengaged, shorter than expected. Leverage was good.

--new?
I think every tsn attampt has some "buts". Does it mean we should stop trying? No. If I had stayed within java/sql/perl then I would have been worse off.... fewer job opportunities,  less broadended techncial base
no differentition from regular java guys
sql and perl falling out of fashion

leverage?



--new?
my tsn ambition/dream is largely constrained by risks:
* stigma/respect
* figure things out faster than colleagues

For these specific risks, my current risk tolerance is higher so I ought to be bolder.

Note these risks exist with/out tsn. If we want to minimize these risks we need to find a low-calibre team like RTS, or OC (95G?)

--
my c# xx journey was exciting but .. In contrast, my core-java/c++ (not jxee) journey has generated superior ROTI because 
* the topics are stable and 
* I was able to stick to these career directions

However, most of the java5 new features are out of fashion in interviews. How about j8 features?

leverage?


--coding drill for indeed:
small problems using lot of python data structures
fuxi python blog posts
list comp
define classes with fields
combine multiple lines to 1
triple quote comments
--new blog: jxee^core java
jxee (esp. web java) is fashionable ... high growth, big job pool

in terms of churn, :) core java < jxee
I am proven right.

In terms of shelf life, jxee <<< core java :(
I am proven right.
Is there some jxee component with stable demand and accu? Spring? Servlet is very relevant but not quizzed in IV! 

in terms of project LOE, :) core java =< jxee, due to complexities in each jxee package and when you combine things in non-standard combinations. See my blog on spring.

in terms of IV body building and entry barrier, jxee < core java < cpp. I struggled with cpp IV for years but was able to crack c# IV more quickly. 

jxee skills are less elite, easy to self-study and often shallow by nature. 
All the complexities are hidden until you combine things it in a non-standad way.

In terms of salary, jxee = core java = cpp.
I was proven wrong.

Even though c++ and core java are harder and more elitist, they don't pay higher.

in terms of market depth+size, cpp < core java < jxee
core java is mostly limited to ibanks + buy-side. jxee offers superior market depth
I feel the job pool is growing for jxee not for core java or cpp. Similarly, job pool is growing for javascript, mobile, big data, cloud

No need to experiment at home or read books like I did on JMS, EJB, Spring. It takes too much time but doesn't really give me confidence.

--since 2007, very few examples of "effort->ROTI" including financial ROTI
(vague, not worth publishing)
* c++/C#/java IV pass rate
* pure algo IV pass rate
* online timed coding IV pass rate
* passive income growing including Energy12
* diet
--new or update:
long-term orgro is elusive. Biggest success I can think of is c++ (thanks to lots of IV) but in terms of salary increasae, I can't think of any... perhaps quant dev

c# -- i made sacrifices for deep-dive and experienced rare engagement + orgro. I have since given up the direction, as c# is not so relevant to...

swing -- rare engagement + orgro

leverage?



--no blogpost: I actually felt good receiving low salary offers like Nasdaq and NCS
Somehow it confirms my value-add to the economy, my "health condition" 
