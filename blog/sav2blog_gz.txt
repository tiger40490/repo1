--
Using words and numbers, am trying to "capture" my perceptions (intuitions, observations and hopefully a bit of insights) of the c++/java job market trends. There's some reality out there but each person including the expert has only a limited view of that reality, based on limited data.

Those numbers look impressive, but they are similar to the words -- personal perceptions.

If you don't use words or numbers then you can't capture anything. Your impression of that reality (without words you can't evem refer to that reality) remains extremely vague. I now believe vague is the lowest level of comprehension, as bad as a biased comprehension. Using words+numbers we have a chance to improve our perception.

my perceptions shape my decisions, and my decisions affect my family's life chances.

my perceptions shape my selective listening. Gradually, actively, my selective listening would modify my "membrane"! All great thinkers, writers update their membrane.

Am basically analyzing my perception of the reality, but that's the best I could do. I'm good at analyzing myself as an object.

Refusing to plan because of high uncertainty is lazy, is pessimistic, is doomed.

--fuxi: my 1st aid blogposts tend to cluster around 2 central themes -- PIP and peerComp

--fuxi: The peerComp tends to be based on very limited facts and mostly imagination.

--I like the PIP abbr as it is shorter and well-defined

--3 reasons this hibernation phase is so much better than last time
* not fixated on inferiority. at age 38 I was still feeling at peak and hence ... struggling against and missing the expectations repeatedly (boxer taking a brutal beating). Now at age 45 my self-expectations match reality way better

* java job -- not aiming to tackle tough tech domains like c++ or quant. Job is easier than Macq and Qz. so far no PIP risk

* boy's academics -- not taken up as my burden

I grossly underestimated the impact of PIP, damaged goods, stigma, 

--I still want to do c++. If I do a gr8 job in this java team, I might get a chance to take on some c++ work.

Recall the CG/velocity projects I might have some advantages as those guys aren't superstars. 

--in terms of QQ (hard questions by definition), 
95% of the c++0x features are in mv-semantics