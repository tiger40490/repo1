--new blogpost: esteem-protection: stigma^salary gap
In terms of my past experiences of self-esteem under attack, which attacks were more serious and high  priority for future planning?
? stigma/appraisal/coworkerBenchmark
? salary gap cf peers
? brank -- I have kind of given up on this front after chose the contractor career
? property and other assets

--new blogpost: salary has least impact on family well-being
sometimes I feel 20k lower salary doesn't affect my self-esteem or family well-being. In contrast, stigma/respect/coworkerBenchmark, commute, workload have bigger impact on self-esteem and family well-being

--new blogpost
Suppose i invest heavily and become very productive on a local c++system. 
Or a java, or SQL, or socket, pyhton, tibrv system. 
Now, any local system uses only a small portion of the language features at most 2% of the advanced interview topics on that language. 
Therefore the experience won't give me confidence to be an expert on the language... but acing multiple QQ interviews does as these interveiws compare dozens of candidates across the field. 

I grew very confident of java through this type of external benchmarking, in contrast to internal benchmarking within the local team.

--update blogpost on sg workload 
Lower workload Can mean more time for kids + workout but can also mean more time wasted (burn/rot)

The free time saved from lower workload is often spent on reflective blogging.
"Best" usage is tech learning, but my trec is mixed.

My experiments with quant, swing, c#.. were overspent leading to poor ROTI, but no regrets

Luckily socket, python, coding drill, c++ experiments produced better ROTI in terms of self-confidence, thick=>thin/zbs, mobility, broad-base

We can't dismiss $ROTI but I think we really need to look beyond $ROTI -- too elusive. As Mithun put it, java multithreading alone can fetch you highest salary.

I have blogposts on spare time usage, and tech learning (even the non-strategic topics) are among the most productive!
There's really nothing more worth learning. Every learning direction has naysayers, and virtually all learning effort has ROTI except defensively.

--update blogpost on meaningful endeavors for family well being
competitive strength in speed coding contest -- such contest are now more prevalent and the skills are definitely more valued 
competitive strength in dStruct/algo beyond the classics
competitive strength in core cpp QQ
competitive strength in core java QQ -- bigger job market
competitive strength in socket QQ
competitive strength in SQL QQ and perl GTD -- better than swing 
competitive strength in math in school -- huge and long-term impact
competence in localSys -- no long-term impacts, so Ashish's t-investment is unwise
improvement in yoga and fitness

In each case, you build up competitive strength over J years but may lose it in K years. Each strength has very different long-term impacts, not "zero" (transient) as we sometimes perceived them to be.

Valuable resources are scarce and is a competition. Therefore this competitive profile has long term impact on health, mental aging, stress level, job choices, commute, amount of annual leave.

Any higher ROTI?

You can say every woman's natural beauty has imperfections when you see that woman everyday. This is because our idea of perfect beauty is based on paintings and photos, not live humans. Similarly, every endeavor's ROTI has imperfections compared to our naive, idealized concepts.

If you look for imperfections you will always find some.... but such fixation on imperfections is cynical, demoralizing and unproductive research

Need to zoom into my strategic strengths + long term interests such as low-level, theoretical stuff, pure algo, dstruct, and avoid my weaknesses 

low level QQ -- my strength
low level investigation using tools + codebase -- my weakness
picking up new GTD challenges -- my relative weakness
picking up new IV topic -- my relative strength

--new blogpost:
I used to feel I ought to "plowback" for zbs and GTD, not only for IV. Now after working for 20 years, I now believe ANY tech knowledge, accu, deepening/stack-up ... has no leverage and basically worthless if not relevant to IV. 
* GTD skills? dominated by localSys. Tool knowledge can help but localSys is 10x more important.
** localSys xx is almost always cursory and not in-depth since unnecessary digging (pwm-comm bottom-up xx plan) is invariably unsustainable -- patchwork systems, destined for rewrite, illustrating few best practices
* BestPractice design? Almost never mattered in my career. After EMPWorld, I have never risen to decision-maker level.
* BestPractice implementation? mostly a matter of personal preference by the manager
* zbs? Consider the classic books like [[Pearls]]. If not relevant to IV then this zbs is only for self-satisfaction

This is one reason why my reinforcement loop completely broke in Singapore. My NY years were filled with self improvement driven by interviews.
--no blogpost
i didn't need high salary so badly, so what's the real reasons why I sacrifice so much to re-enter U.S.?
rebuild confidence about career/financial foundation for next 25Y, since my passive-income/asset/burn-rate profile is far from comfortable
rebuild self esteem.. stigma?
--no blogpost
when I get obsessed with brank peer comparison (against "peers" in china), i miss out on all sorts of more important things like kids, ffree, body shape, diet control, wellness, 

if I were a mgr like Miao in a bank, I would feel ..

my value-add is tied to this firm and not portable compared to a techie

I got to this position by building local relationships, learning the localSys and local workflow
.. so it's hard to be confident about repeating the same at another firm

competitive pressure from younger managers
--new blogpost:
if at same pay, i would prefer eq than drv pricing domain, due to mkt depth and job pool

--no blogpost: I actually felt good receiving low salary offers like Baml-repo, Nasdaq and NCS
Somehow it confirms my value-add to the economy, my "health condition" 
