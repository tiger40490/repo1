--new blogpost: dev-lead IV is not easy.
Passing the tech interview to get a dev-lead role isn't easy. It can change your career.
competition can be tough. 

So I think my ex-colleagues need a lot of effort to pass those interviews. 
Just look at CSY and Deepak and my own attempt to get into HFT .. how many failures and how much t-investment needed.

It takes more than on-the-job learning. It takes months or years of absorbency, sustained focus... Most of us underestimate that bar until we try and fail repeatedly to clear it.
--new blogpost
Analogy -- (Trevor Tang) picking a major in medicine is a wrong bet if you are into technology
MOM roti? low but could be high if I pursue an architect career in non-eq trading. The underlying tech is very flexible and mature and a winning bet
SQL tuning + complex query -- roti could be higher if I go into big data. The underlying tech is powerful and mature and not dead
swing roti? could be higher if I purpose a GUI career. There is a lot of highly inheritable, portable skill even if swing goes out
drv pricing roti? could be higher if I stick to quant-dev career and move only within similar roles. However, if you move from volatility to yield curve to exotics, the accu became predictably very thin

--new blogpost: no$roti over last10Y2branch out@java because..
So far, we java developers were lucky so we see no financial gain in diversification.

I feel someone like Mithun has low motivation to deep dive outside java so their breadth and depth would be (not slightly) limited

--new blogpost:
if at same pay, i would prefer eq than drv pricing domain, due to mkt depth and job pool

--updte blogpost on greenfield^brownfield:
it's actually not hard to build some new "mkt data engine" as Quoine's Richard did over a few months, since greenfield is much simpler than brownfield. 

Sundip wrote an prototype of StirtRisk over a week, but the really big effort is the build-out from prototype to finished product.

Kenny of Trecquant designed something really simple that supposedly does the same job as a 100-man-year system, 

I created a FIX engine over a few hours.

I implemented a basic order book over a few hours even when I was new to c++

--no blogpost
when I get obsessed with brank peer comparison (against "peers" in china), i miss out on all sorts of more important things like kids, ffree, body shape, diet control, wellness, 

--new blogpost
Q: why quant jobs used to be more abundant and pay a premium even though the economic value-add of the quant skill has always been questionable. 
A: because the traders made money and subsequently received a big budget

I am more theoretical and was naturally attracted to this domain but the value-add reality soon prevailed.

Tech shops love algo challenges and speed-coding which have dubious value-add similar to the quant skills. However, the hot money in tech sector is much bigger and last longer. 

--new new blogpost: tsn gains: mostly elusive to achievable
[tags t_othRisk, t_framework]
when I tsn, i aim at multiple target 'gains' as in a pyramid
strategic value is the most elusive, comparable to HuKun taking his brother as role model. More strategic is my rental property investment
salary hike is one of the least likely [CVA]
i hope to open up new job markets at similar pay. I enjoy wider range of oppo and being in-demand
but the new market is unsuitable, ..
i hope to broaden my capability base incl dnlg. 
I don't want all my eggs in one basket... hedging
but the broad base may not be so relevant,..
i hope to build my self-confidence about learning
but sometimes not much self-confidence boost,.. 
i hope to keep my mind active and engaged, rather than doing the same boring job over 5Y

(Not really about tsn) i also want to strengthen my position, extend my lead on the body-building race. This effort takes huge amount of energy

if all else fail, i hope to avoid waste my precious spare time - burn/rot

--new blogpost: c#^java/c++ journeys
[tags t_below7]
my c# xx journey was exciting for 6M before OC and in first year in OC. In contrast, my core-java/c++ (less for jxee) journeys have generated superior ROTI (elusive) because 
* the interview topics are stable 
* market waves steered me to stick to (not abandon) these career directions

leverage? c# is lower but not bad. See separate blogpost

For all languages, there is no hike, no strategic value so at that level all underwhelming

--new blogpost: delights: engaged,leverage,strategic.. 
[tags t_othRisk]
I feel my expectation was invariably too high in terms of strategic value, leverage and ROTI, therefore underwhelming. 
(engagement ... expectation was moderately too high) 
Against this backdrop, there are little delights, but stigma/respect (not salary!) was too huge as a factor and overshadowed those little delights. For a perspective, please look at the spreadsheet "predict next 3-5Y job satisfaction"

I chose a python job at Macq .. engaged for a few months, to my delight
I chose the c++ job at RTS .. engaged for 6 months, to my delight. 
* Reason: traction in interviews and also in GTD and zbs
* Reason: interviews
* Reason: socket QQ was in-demand
* Reason: QQ discussions with colleagues .. visible progress

Both job decisions produced good/superior leverage over 5Y.

I chose a c# job ... engaged for a year and then disengaged, shorter than expected. Leverage was good.

I chose a Quant dev job ... engaged for a year and never disengaged. Leverage was underwhelming.

I chose a c++ large scale eq OMS job ... engaged for a few months. Leverage is unknown
--new blogpost
[tags t_othRisk, t_churn]
My thick->thin insight into c#, SQL, swing, quant ... are not needed at present. Future? How about my current heavy t-investment in socket, TMP, c++11...?

Focus today is ROTI, NOT about churn. Socket, SQL, core c++ are actually the best-performing tech bets in terms of robust demand and shelf-life. 

If you stay within core java (like XR and many friends), then you don't need to learn these other skills, but are they better off now? Diminishing return in ROTI?

I think it's impossibly hard to keep keep up ROTI. I can aim for accu, thick->thin, cross-pollination, churn resistance, sustained focus, traction, engaging, ... but ROTI is still underwhelming.

ROTI is a huge "deflator" of my enthusiasm, motivation, absorbency.. I think I need rational expectations.

Among the biggest 10 branching out (tsn) from java/SQL/perl , I still favor c++/socket/py/mktData.
--new or update: long-term orgro=elusive
long-term orgro is elusive. Biggest success I can think of is c++ (thanks to lots of IV) but in terms of salary increasae, I can't think of any... perhaps quant dev

swing -- rare engagement + orgro but abandoned !

c# -- i made sacrifices for deep-dive, and in return experienced rare engagement + orgro. I have since given up the direction, as c# is not so relevant to my current direction.

--update blogpost
Lower workload Can mean more time for kids + workout but can also mean more time wasted (burn/rot)

The free time saved from lower workload is often spent on reflective blogging.
"Best" usage is tech learning, but my trec is mixed.

My experiments with quant, swing, c#.. were overspent leading to poor ROTI, but no regrets

Luckily socket, python, coding drill, c++ experiments produced better ROTI in terms of self-confidence, thick=>thin/zbs, mobility, broad-base

We can't dismiss $ROTI but I think we really need to look beyond $ROTI -- too elusive. As Mithun put it, java multithreading alone can fetch you highest salary.

I have blogposts on spare time usage, and tech learning (even the non-strategic topics) are among the most productive!
There's really nothing more worth learning. Every learning direction has naysayers, and virtually all learning effort has ROTI except defensively.
--update blogpost on meaningful endeavors for family well being
competitive strength in speed coding contest -- such contest are now more prevalent and the skills are definitely more valued 
competitive strength in dStruct/algo beyond the classics
competitive strength in core cpp QQ
competitive strength in core java QQ -- bigger job market
competitive strength in socket QQ
competitive strength in SQL QQ and perl GTD -- better than swing 
competitive strength in math in school -- huge and long-term impact
competence in localSys -- no long-term impacts, so Ashish's t-investment is unwise
improvement in yoga and fitness

In each case, you build up competitive strength over J years but may lose it in K years. Each strength has very different long-term impacts, not "zero" (transient) as we sometimes perceived them to be.

Valuable resources are scarce and is a competition. Therefore this competitive profile has long term impact on health, mental aging, stress level, job choices, commute, amount of annual leave.

Any higher ROTI?

You can say every woman's natural beauty has imperfections when you see that woman everyday. This is because our idea of perfect beauty is based on paintings and photos, not live humans. Similarly, every endeavor's ROTI has imperfections compared to our naive, idealized concepts.

If you look for imperfections you will always find some.... but such fixation on imperfections is cynical, demoralizing and unproductive research

Need to zoom into my strategic strengths + long term interests such as low-level, theoretical stuff, pure algo, dstruct, and avoid my weaknesses 

low level QQ -- my strength
low level investigation using tools + codebase -- my weakness
picking up new GTD challenges -- my relative weakness
picking up new IV topic -- my relative strength

--new blogpost: Ashish's promotion: Kyle discussion
The financial reward is a big but not the only reinforcement of absorbency, engagement, sustained focus. Those who commit to localSys are rarely promoted, as explained in numerous blogposts. GS was a watershed defining experience in my career. #2 experience is probably Stirt. Since big bonuses are utterly unreliable, FTE career is comparable to a contract career financially, but inferior in terms of stress, self-esteem etc.

As Kyle pointed out, there must be some intrinsic motivation in the Ashishes and Rahuls. "Traction" and "engaging" are the word. 

I feel Ashish commits more personal energy than his colleagues do on localSys because he derives some joy.

I commit more personal energy than other candidates on QQ (and to a lesser extent coding drill) because I derive some joy.

Given a choice between localSys xx vs QQ (or coding drill), I would not choose localSys, because of accu. 

--new?
my tsn ambition/dream is largely constrained by risks:
* stigma/respect
* figure things out faster than colleagues

For these specific risks, my current risk tolerance is higher so I ought to be bolder.

Note these risks exist with/out tsn. If we want to minimize these risks we need to find a low-calibre team like RTS, or OC (95G?)

--new new new blogpost: java perf^simplicity
Paradoxically
java's syntax simplicity is on par with python, better than c# and much better than c++.
java's performance is on par with c# and c++, largely due to JVM and JIT

java has been popular on web servers, and crucially the newer mobile, cloud, big-data platforms, beating c++, c#, python

java's adoption rate as a foundation platform or integration-target... is better than other languages. Many products are built for java, on java or with java in mind. I'm deliberately vague here because I don't want to spend too much time analyzing this vague, general observation.

--new blogpost:
I used to feel I ought to "plowback" for zbs and GTD, not only for IV. Now after working for 20 years, I now believe ANY tech knowledge, accu, deepening/stack-up ... has no leverage and basically worthless if not relevant to IV. 
* GTD skills? dominated by localSys. Tool knowledge can help but localSys is 10x more important.
** localSys xx is almost always cursory and not in-depth since unnecessary digging (pwm-comm bottom-up xx plan) is invariably unsustainable -- patchwork systems, destined for rewrite, illustrating few best practices
* BestPractice design? Almost never mattered in my career. After EMPWorld, I have never risen to decision-maker level.
* BestPractice implementation? mostly a matter of personal preference by the manager
* zbs? Consider the classic books like [[Pearls]]. If not relevant to IV then this zbs is only for self-satisfaction

This is one reason why my reinforcement loop completely broke in Singapore. My NY years were filled with self improvement driven by interviews.
--no blogpost
i didn't need high salary so badly, so what's the real reasons why I sacrifice so much to re-enter U.S.?
rebuild confidence about career/financial foundation for next 25Y, since my passive-income/asset/burn-rate profile is far from comfortable
rebuild self esteem.. stigma?
--no blogpost
if I were a mgr like Miao in a bank, I would feel ..

my value-add is tied to this firm and not portable compared to a techie

I got to this position by building local relationships, learning the localSys and local workflow
.. so it's hard to be confident about repeating the same at another firm

competitive pressure from younger managers

--no blogpost: I actually felt good receiving low salary offers like Baml-repo, Nasdaq and NCS
Somehow it confirms my value-add to the economy, my "health condition" 
