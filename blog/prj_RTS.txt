The NYSE integrated feed
As of 2017, this was the newest real time feed from the New York Stock Exchange. This brand new "integrated" feed streams every order from the matching engine, every trade, every cancel, amend, and everything else in the same sequence as the exchange matching engines process them. This integrated feed removes the widespread risk that a Level 2 (market depth) feed and Level 1 feed on separate connections could be delivered out of sync.

Until recently, the exchange has always sent Level 1 feed and Level 2 feed on independent, uncoordinated channels:
•	Level 2 feed includes all, and only, the bid and ask orders, but no trades
•	Level 1 feed includes all executions, and the top bid and top offer for each symbol, but not the second best bids or offers.

At peak trading hours, these two feeds are not always sent and received exactly in sync. There can be various latencies at the exchange site, at the subscriber site or at some network nodes in between. A subscriber of both feeds could receive (on Level 1) an order execution before he even gets to see the original order on the delayed Level 2 feed. In another bad scenario, he could receive (on the delayed Level 1) a new top bid too late, long after he receives the modification of that top bid. All of these and other scenarios have cause real confusions in the downstream systems in the past.

(There are hundreds of downstream systems for the feed handler Bin Tan is working on.)

The integrated feed is the most effective solution to the out-of-sync scenario, but it does require a technology upgrade. To cope with the high data volume and data speed, NYSE provides identical data feeds for failover, each having 8 subsets of the symbol universe. Therefore, at least 16 streams of data could be processed in parallel at any time. Maximum throughput is at least 370,000 messages per second per thread. This level of throughput requires advanced latency and memory management.

Bin Tan’s feed handler also generates symbol data for a downstream dedicated reference data system, which supports exchange symbol mapping on every ticker, and reference data intra-day updates, such as dividends/splits, corporate actions and new symbols due to IPO.
The feed handler also supports exchange daily opening and closing auction "imbalance" data. The feed handler must anticipate the timing of market open, market close, auction open and auction closing phase (a few minutes before market open/close), symbol update starting, end of symbol update etc. It has to disconnect from exchange at the right time, to avoid picking up exchange test data sent in the afterhours. A dedicated timer and scheduled jobs are used to control the timing.

Internal order book engine
At the heart of the integrated feed handler Bin Tan is building, there is an internal order book maintained for every symbol in every exchange feed. This order book is a real time replication of the live order book inside the exchange matching engine. Together with the reference data system, this order book engine maintains the state of all instruments. 
•	It sends refresh messages for all instruments, that enables clients to replicate the internal order book at client sites
•	It generates crucial derived fields such as daily high, low and open prices on every symbol.
•	Dozens of complex business rules to manage orders, trades, cancellations, amendments.
•	The software supports the handling of complete order book and level-based order books
•	It also has an administration console to let human (or automated) operators log in and clean up individual symbols, update holiday calendars, remove stale orders etc.
•	Full fault tolerance, resilience, recovery against outage, and data restore are necessary for this internal order book to be useful. It’s not meaning if not highly reliable.

Retransmission
A notable new feature to be added in Bin Tan’s project is retransmission. Many exchange feeds including the NYSE integrated feed are based on the fast but less reliable UDP protocol. Data loss happens rarely but definitely, often resulting in stale orders sitting in the internal order books. 
Retransmission feature is designed to detect missed messages and request them on a separate network interface, wait to receive them on another dedicated network interface, and add the retransmitted messages into the internal order book, marked as OutOfSequence.
Retransmission is a new and advanced technology and not widely implemented. To avoid data race or deadlock scenarios, the feed parser uses a single thread of execution on all network interfaces including the main publisher channel, a retransmission request channel, a retransmission receiver channel, a refresh channel, and the timer callback. Multiplexing across these channels requires a relatively new and advanced network programming design based on epoll() and poll() system calls, which are similar but newer and better than the traditional select() system call.
The NYSE integrated feed uses an optimized proprietary binary protocol (known as XDP) over TCP and multicast UDP, so the feed parser Bin Tan is building has to support both TCP and UDP. Every single day the parser handles gigabytes of raw binary data but even one byte of data corruption, or synchronization mistake could easily result in a crash.  The toughest challenge faced by many developers in such a project is crash investigation. Low level memory debugging and buffer management is a mandatory skill.
Another major challenge in this type of project is sequence number, required for retransmission gap management. In addition, sequence number tracking is used to support “best-of-both”, an automatic failover mechanism between the identical backup channels. Since the same sequence numbers are received on multiple identical channels, duplicate check also depends on sequence numbers. The same sequence number is also saved in the internal order book and sent downstream, because clients will need the sequence numbers too. Last but not least, exchange can trigger sequence number reset and rollover mid-day. Any mis-handling of sequence numbers can (and often did) wreak havoc. Sequence numbers are crucial infrastructure in a high-speed high volume data stream, complex and difficult to comprehend. Therefore, there’s an entire framework built around sequence numbers. It requires non-trivial software engineering and design expertise.

Distribution network
Clients receive the processed data from feed handlers via three types of networks
•	Lease lines: Streaming data originates at several redundant data centers, and uses both managed and customer-selected carriers. In addition to our own data centers where data originates (such as New Jersey, London, Hongkong), the data is available for local distribution at several POPs around the world, including in Europe, U.S. and Asia Pacific
•	Virtual Private Networks over the internet: provided to global customers from a set of servers hosted in New Jersey
•	Cross-connects at colocation facilities: There are several locations in U.S. and Europe including New York City, Chicago and New Jersey.

refresh channel
periodic summary messages
Line A vs B

 
Other project information
NYSE integrated feed is the main project. In addition, Bin Tan will be working on similar projects with other exchanges in Americas, Europe and Asia. 
The proposed systems would connect to these trading venues. Each trading venue could use FIX or proprietary data protocols. Each data feed has multiple detailed specifications that precisely describes the format and meaning of every data field, how each field is to be processed, transformed, validated, expired, in a complex web of information. A complete set of exchange specification has typically 50 to over 100 pages. There are dedicated business analysts responsible for these specifications and it requires years of market data experience to understand, contribute to and discuss these exchange specifications. These specifications would become the main documents for Quality Assurance, Business Analyst, and developers. All of the details of the exchange specification have to be tested before the feed goes into production.
Unlike an in-house system at banks or hedge funds, these feed handlers are part of a commercial product used every second at hundreds of paying customer sites, not a handful of internal users. User sites are on every continent so Bin Tan's code runs 24/7. Testing is more automated, standardized, more industrial-strength. If there’s an implementation bug left untested, the impact would be more widespread than in an internal system.
At the operational level, the feed handler also supports many forms of error handling, data loss/re-transmission, bandwidth capacity tracking, intra-day restart, intra-day failover from one data center to another.
