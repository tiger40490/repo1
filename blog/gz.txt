-- new: reality of temp jobs 4me+youth
I tend to perceive temp jobs positively, as learning.

many unlucky job seekers end up working on temp jobs. No job security, low pay, limited trec
eg: Chinese immigrants to Canada
eg: Shuo in 1997 after graduation
eg: my temp jobs in 2005
eg: many of the jobless 2023 graduates from China universities

If you don't worry about livelihood, then you can enroll in a training program instead.

-- update bpost about sanctuary... or addicted...
During the smashing episodes, I relied on office as a sleeping place. More importantly, during that crisis, I came to office 7 days a week and shifted focus to a demanding task at work. A healthy shift.

Some office tasks are too demanding, too stressful, but I have found other office tasks quite manageable, and a wholesome, welcome diversion.

Beside the "tasks", the physical environment of the office is a sanctuary, a harbor for me.

I hate tiresome commutes including multi-transfer commute. Red and Green lines are integrated with quick transfers.

-- update bpost on workload.
I told my UAT team colleague ...

Sometimes I deliberately slow down and extend my project timeline to some extent, often to do a quality job.
Sometimes I take time off in office, working on personal stuff. (Companies also organize events during work hours.)
Sometimes I spend time learning domain or technology knowledge... which slows down my projects.
Sometimes I chitchat with colleagues from far away, to build support network or provide support.

I don't need to feel guilty.

100 years ago, labourers toiled for 13h x 7d. My wife used to work 7D/w. In the 90s, most Singapore offices operated 5.5 days every week. As of 2022, European workers averaged 35.7 h/week, and max out at 41 in Greece. Using 13x7 as yardstick, we are all lazy bones, and should feel guilty.

What's a fair amount of workload? It depends on our age, our position, the team avarage, our efficiency level, our localsys knowhow,,

Higher quality means better documentation, cleaner code, easier training, more testability, fewer neglected scenarios,,,, Quality invariably requires more time, often less intensity, but reduces failures, down times, and support effort. 

Need to reduce actual work hours, while I maintain or even increase my quiet hours in office.

-- fuxi or new: y I have never feared没工作since graduation
Background: in 2023-2025, there were lots of news and social-media analysis of graduate unemployment, most visibly in China. It prompted the question 

Q1: Why after graduating have you never become jobless?
AA: I had a CSM scholarship.
A: I then caught the dotcom wave --
During the final 12M in CSM, I self-taught perl, LAMP to become an in-demand web-dev.
A1: I am a laser .. focused on CV and JIV since my 2000 job search.

Q3: Did you never hit "no-experience, unwelcome"?

When I tried pre-sales, I had zero experience and a lucky break at SCS-SI. Unlike those China graduates, I was hopeful, promising, enthusiastic, confident to both interviewers. (I did help SCS win two projects.)

When I tried SysAdmin (Sperion/Agilent), I had no professional experience but to the interviewers I was technically and personally competent.

When I tried WSt in 2007, I had no "solid" java experience. I self-studied for months before I started "killing" at UBS/GS.

A3: In conclusion, I simply stood out among the crowd in each case.

Q5: Did you ever fail at a job and face the jobless prospect?

I failed many jobs [SCS, EMPWorld, Strategem, OceanLake, Verizon, q3sg, ,,] but recovered quickly. How about my cohort (including the China graduates, comparing to the Victan before 2000)? Majority of them also hit failures (unless they join gov). How many of them recover repeatedly and efficiently like me?

A: In conclusion, I have self-renewal (SP500) capacity.

Q5b: How about your PIP traumas? How do they compare to a China graduate's /adversities/ ?
%%A: PIP experiences were possibly the worst traumas in my life, but they didn't seriously jeopardize my (family) livelihood. I'm a laser (A1), I stand out from the crowd (A3), I was able to get my job done in every company [SCS ..see above],,

Q7: Did you experience no downturn/drought like "China23-24"?
AA: 1998, 2003 SARS, 2008 GFC

-- new or update bpost on opaque^transparency.. which bpost?
After you gain insight into an otherwise opaque system, then your job security and career security improves to some extent, depending on 

* How indispensible/crucial/central/redundant is that opaque system?
* Across industries, how widely used is that opaque system? Murex? Spring? Aeron? Majority of opaque systems are localSys
* rarity of your insight .. Are you a one-man show? VolFitter requires more math:)
* depth of your insight. 
* longevity of the opaque system and its accu and churn-resistance
* crying baby .. PMA takes up work hours and can let me demonstrate my knowledge and book my hours :) In contrast, Nautilus is not a crying baby :(

c++ is deeper and more opaque than java. Shell/perl/python are usually less opaque but python can become opaque as described in another bpost.

How about PMA? Not so opaque; indispensible; one-man show

-- fuxi or new: localSys ^ high-churn domains
portable t-investment .. zero for localSys 
market value .. zero for localSys
engaging .. high-churn (typescript?) could be more exciting than low-churn, accu domains

-- fuxi: I used to enjoy/exploit my perl/SQL/unix GTD "superpower"
I often find a secret killer skill in perl and shell as a power drill when facing a stone wall in project. 

advanced git is popular
shell scripting remains evergreen.
git-bash is useful for me, but not used by others
Nowadays advanced SQL is relevant only in places like PWM. Perl is only used for one-liners.
remote debugg .. Un-usalbe 50% the time when I need it. Live debugger is not as reliable as static command line tools.
One good use of remote debugging is .. revealing at least one way a method is used.
