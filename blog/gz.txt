-- fuxi or update
Most of my past techBets and tsn ... are likely to pay lower dividends after first 10Y. 
Strategic orgro is a holy grail.
We all have to be discretionary, cautious in our positioning.
I spend lots of time blgg about this.
Despite the underwhelming results of my techBets and tsn, we must not give up.
Applicable to Singapore government too. 
We need to decide what tech to take up and what to put off.

For the last 15Y, finDev IV is my chose game.
The 3 types of dnlg are still relevant.

-- slow cooking new: dev~=singing/acting career
There are many differences and a few similarities.

In terms of design skill, some developers peak at mid-30s to 50+. Depending on domain, accumulation and wisdom can help, but not as much as medical, sciences or teaching.

In terms of learning (various sub-domains), I feel some developers peak at 20 to 40+. It depends largely on foundation, interest, habit..

In terms of GTD, depending on the system and job role, some developers peak at 20 to 50+. It depends on habit, passion, dedication...

In terms of dnlg, I identified 3 types [lingo^math^arch]. These 3 types demand some level of interest, aptitude. Some developers peak at 30+ to 50+.

-- new (or update): young techie's worries
"My income is not rising as much as my peers"
not learning enough, not competent enough
short runway .. by age 30 I am expected to be competent, independent, possibly a team lead
too many choices
long struggle ahead, over 40Y
"Is this domain right for me? Will I regret?"
peer pressure on all fronts

See also tuxedo post

--(new or ) update blogpost on IV_skill ^ GTD
https://btv-gz.dreamhosters.com/wp-admin/post.php?post=36560&action=edit

Sometimes we get into a new job and find a nasty manager (Yang to Roland), or long hours (PWM), or hard, uninspiring technology stack (Qz).

Some 10% just quit decisively within 6M, like Henry Fu. This route requires the key skill of IV.

The rest of us try to get used to the new job. Sometimes this proves to be patient, steady and effective.

Some 10%+ suffer in pain, like Sudhir (based on my limited knowledge) and my OC job.

-- where can I used this term?
tenuous(fragile) job security

-- new or update (which one?)
Shi.Cheng hinted that interview prep is not his long-term mission. I think he wants to build zbs and grow on the tech ladder or the mgr ladder. German also said "it's hard to find a tech lead or app owner".

I felt slightly ashamed. However, now I'm kinda mellowing up. Lead role comes with higher responsibility, higher stress, higher risk. Look at YW.Chen among others. The financial reward is not worth much. 

The risks to old-timer is easily underestimated. Their job security is tenuous.

-- update https://btv-gz.dreamhosters.com/wp-admin/post.php?post=25175&action=edit
NoSql is bigData, not DS/ML. 

Data Science probably favors python or R. ML is even less suitable for java.
ML includes classification, recommendation, ,, NeuralNetwork is part of ML

-- fuxi: for livelihood security (food security?) many governments are not so dependable, but some governments are better than employers. 

However, In terms of financial support, government handout is tiny compared to employers'.

-- fuxi:
t_jolt
if an employer permits some reasonable amount of blogging in office, then I'm willing to accept $1k less salary.

-- fuxi: With 92S27 ex-classmates, I now can call myself a WallSt veteran techie, one of the most upstream sectors 
Evidence for "veteran"? Not GTD, not even zbs, but mostly the interview-visible expertise. 

This expertise is about the only criteria IMO. Anyone "strong" on this front is considered a veteran, regardless of his GTD, localSys....  Anyone weak on this front .. can still be a veteran, but with limited mobility.

A veteran developer doesn't need to be an above-average developer or expert developer but need to possess some demonstrable experience in the field. Therefore, a long stay in one team (Jack.Zhang?) is less valuable than multiple one-year projects.

Can you acquire this expertise with only 3Y experience? You would need to attend many interviews.

--fuxi web2.0 is a good phrase for a vague and broad category. Remarkably, It has not received any criticism and has stood the test of time
