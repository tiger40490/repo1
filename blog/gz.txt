--fuxi
Henry Luo, Sunil, Anil .. with limited experience can become highly-paid or senior java developers. This is testament to low entry barrier, market depth of java job market.

--new: tech IV: communication appraisal 
In the U.S. competitive landscape, communication skill often means English skills, given the talent pool dominated by immigrants from East Europe and Asia.

However, my interview with the Japanese NumTech failed partly due to lack of humor.
--fuxi
Some managers are just good at managing a lot of projects, but they may have some limitations elsewhere

--new: if I had not entered finDev
Some (casual) observers may say that without the 2007 WalSt journey I would have gone to web2.0 shops. 
Well, majority of non-finDev guys in my age group have not gone there. 
Look at all of my ex-colleagues. 
Those who go into some web2.0 shops in SG are not earning 200k. Also, they must manage teams, but I'm simply not interested.

What's the likelihood that I get into SG finDev without the U.S. trip? Questionable, because of entry barrier not only in IV. I would need to try 10-30 interviews but SG market doesn't let me keep trying

Perhaps my disposition translates to strength in the web2.0 space? 
Well, financial dnlg(math++), multi-threading, language-details, latency knowledge are my strong games that are non-critical to web2.0 interviews.

--new: implement hash table or vector:
eg: Broadway Tech
eg: GS
eg: AshS GrassHopper: no-code
eg: SIG onsite: vector push_back
eg: GS-London: deque: no-code

Why web2.0 seldom ask this? Not much algo involved. 

Why WallSt often ask this? Reveals efficiency in implementation

--new: scalability^latency
web2.0 shops don't care about latency engineering including multi-threading, language/compiler features

WallSt doesn't care about scalability per se. For them, scalability is achieved with hardware and architecture.

Both camps care about data structures as they are fundamental to scalability and latency.

OPRA feed handler requires scalability. Similarly, my NYSE XDP feed handlers can cope with 370 KMPS per thread. Somehow web2.0 shops are not impressed.