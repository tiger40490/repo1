alias l='ls1page'
alias t='ls1page -t'
alias nn='git commit -a --amend --no-edit; gg 1 ' #useful while standing in train
alias py='winpty python.exe'
alias python='echo python command breaks in git-bash.. Disable this alias if you must.'
alias s-='  source  $HOME/.bashrc  '
alias s+='vi $HOME/append.bashrc_win.txt '
alias ..='cd .. ; ls1page'
alias l1='git log -1'
alias l2='git log -2'
alias l5='git log -5'
alias

ls1page(){
  ls -ahlF --color=always $*
  df -h --output=avail / 
}
run(){
  g++ -std=c++17 $1 && ./a.exe
}

exa(){ #testing: exa -t ss ~/.ssh
# proven since 2010
  local ops
  while is_opt=`echo $1 |perl -ne 'print if /^-/'  ` && [ "$is_opt" ]; do
    ops="$ops $1"; shift
  done

  if [ $# -eq 1 ]; then
    fullpath=$1
    shortname=`echo $1|perl -pe 's|/$||;s|^.*/||'   `
  else
    fullpath=$2
    shortname=$1
  fi

  [ -x $fullpath ] || return
  eval $shortname="$fullpath" # create a shell variable with a dynamic name!
  echo -e $shortname '\t' now set to $fullpath
  prj="$fullpath"
  alias  "$shortname"="cd $fullpath;ls1page $ops"
  alias  prj=$shortname # USE MORE
}
gg(){ 
  cnt=${1:-3} #by default shows 3 commits
  git log -$cnt
  df -h --output=avail / 
}
pp(){ #by default does a  traditiona pp
 set -x
 for arg; do
   git checkout $arg
   git pull
 done
 git pull;  git push --all -v
 set +x
 df -h --output=avail / 
}

git config core.whitespace -trailing-space # complains if not in a git repo directory
g++ --version |grep g++.exe
py --version
printf "done sourcing append.bashrc_win.txt\n"
